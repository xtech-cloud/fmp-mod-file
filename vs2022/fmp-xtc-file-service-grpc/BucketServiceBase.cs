
//*************************************************************************************
//   !!! Generated by the fmp-cli.  DO NOT EDIT!
//*************************************************************************************

using Grpc.Core;
using System.Threading.Tasks;
using XTC.FMP.MOD.File.LIB.Proto;

namespace XTC.FMP.MOD.File.App.Service
{
    /// <summary>
    /// Bucket基类
    /// </summary>
    public class BucketServiceBase : LIB.Proto.Bucket.BucketBase
    {
    

        public override async Task<UuidResponse> Make(BucketMakeRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new UuidResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<BucketListResponse> List(BucketListRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new BucketListResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<UuidResponse> Remove(BucketRemoveRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new UuidResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<BucketGetResponse> Get(BucketGetRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new BucketGetResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<BucketFindResponse> Find(BucketFindRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new BucketFindResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<BucketSearchResponse> Search(BucketSearchRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new BucketSearchResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<UuidResponse> Update(BucketUpdateRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new UuidResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<UuidResponse> ResetToken(BucketResetTokenRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new UuidResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<BucketGenerateManifestResponse> GenerateManifest(BucketGenerateManifestRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new BucketGenerateManifestResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

        public override async Task<UuidResponse> Clean(BucketCleanRequest _request, ServerCallContext _context)
        {
            return await Task.Run(() => new UuidResponse {
                    Status = new LIB.Proto.Status() { Code = -1, Message = "Not Implemented" },
            });
        }

    }
}

