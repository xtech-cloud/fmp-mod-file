
//*************************************************************************************
//   !!! Generated by the fmp-cli.  DO NOT EDIT!
//*************************************************************************************

using System.Threading.Tasks;
using Grpc.Net.Client;
using XTC.FMP.LIB.MVCS;
using XTC.FMP.MOD.File.LIB.Proto;

namespace XTC.FMP.MOD.File.LIB.MVCS
{
    /// <summary>
    /// Object服务层基类
    /// </summary>
    public class ObjectBaseService : Service
    {
        /// <summary>
        /// 带uid参数的构造函数
        /// </summary>
        /// <param name="_uid">实例化后的唯一识别码</param>
        public ObjectBaseService(string _uid) : base(_uid)
        {

        }

        /// <summary>
        /// 注入GRPC通道
        /// </summary>
        /// <param name="_channel">GRPC通道</param>
        public void InjectGrpcChannel(GrpcChannel? _channel)
        {
            grpcChannel_ = _channel;
        }


        /// <summary>
        /// 调用Prepare
        /// </summary>
        /// <param name="_request">Prepare的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallPrepare(ObjectPrepareRequest? _request)
        {
            getLogger()?.Trace("Call Prepare ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.PrepareAsync(_request);
            getModel()?.UpdateProtoPrepare(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Flush
        /// </summary>
        /// <param name="_request">Flush的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallFlush(ObjectFlushRequest? _request)
        {
            getLogger()?.Trace("Call Flush ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.FlushAsync(_request);
            getModel()?.UpdateProtoFlush(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Get
        /// </summary>
        /// <param name="_request">Get的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallGet(ObjectGetRequest? _request)
        {
            getLogger()?.Trace("Call Get ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.GetAsync(_request);
            getModel()?.UpdateProtoGet(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Find
        /// </summary>
        /// <param name="_request">Find的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallFind(ObjectFindRequest? _request)
        {
            getLogger()?.Trace("Call Find ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.FindAsync(_request);
            getModel()?.UpdateProtoFind(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Remove
        /// </summary>
        /// <param name="_request">Remove的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallRemove(ObjectRemoveRequest? _request)
        {
            getLogger()?.Trace("Call Remove ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.RemoveAsync(_request);
            getModel()?.UpdateProtoRemove(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用List
        /// </summary>
        /// <param name="_request">List的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallList(ObjectListRequest? _request)
        {
            getLogger()?.Trace("Call List ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.ListAsync(_request);
            getModel()?.UpdateProtoList(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Search
        /// </summary>
        /// <param name="_request">Search的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallSearch(ObjectSearchRequest? _request)
        {
            getLogger()?.Trace("Call Search ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.SearchAsync(_request);
            getModel()?.UpdateProtoSearch(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Publish
        /// </summary>
        /// <param name="_request">Publish的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallPublish(ObjectPublishRequest? _request)
        {
            getLogger()?.Trace("Call Publish ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.PublishAsync(_request);
            getModel()?.UpdateProtoPublish(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Preview
        /// </summary>
        /// <param name="_request">Preview的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallPreview(ObjectPreviewRequest? _request)
        {
            getLogger()?.Trace("Call Preview ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.PreviewAsync(_request);
            getModel()?.UpdateProtoPreview(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用Retract
        /// </summary>
        /// <param name="_request">Retract的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallRetract(ObjectRetractRequest? _request)
        {
            getLogger()?.Trace("Call Retract ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.RetractAsync(_request);
            getModel()?.UpdateProtoRetract(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用ConvertFromBase64
        /// </summary>
        /// <param name="_request">ConvertFromBase64的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallConvertFromBase64(ObjectConvertFromBase64Request? _request)
        {
            getLogger()?.Trace("Call ConvertFromBase64 ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.ConvertFromBase64Async(_request);
            getModel()?.UpdateProtoConvertFromBase64(response);
            return Error.OK;
        }

        /// <summary>
        /// 调用ConvertFromUrl
        /// </summary>
        /// <param name="_request">ConvertFromUrl的请求</param>
        /// <returns>错误</returns>
        public async Task<Error> CallConvertFromUrl(ObjectConvertFromUrlRequest? _request)
        {
            getLogger()?.Trace("Call ConvertFromUrl ...");
            if(null == _request)
            {
                return Error.NewNullErr("parameter:_request is null");
            }
            var client = getGrpcClient();
            if (null == client)
            {
                return Error.NewNullErr("client is null");
            }

            var response = await client.ConvertFromUrlAsync(_request);
            getModel()?.UpdateProtoConvertFromUrl(response);
            return Error.OK;
        }


        /// <summary>
        /// 获取直系数据层
        /// </summary>
        /// <returns>数据层</returns>
        protected ObjectModel? getModel()
        {
            if(null == model_)
                model_ = findModel(ObjectModel.NAME) as ObjectModel;
            return model_;
        }

        /// <summary>
        /// 获取GRPC客户端
        /// </summary>
        /// <returns>GRPC客户端</returns>
        protected Object.ObjectClient? getGrpcClient()
        {
            if (null == grpcChannel_)
                return null;

            if(null == clientObject_)
            {
                clientObject_ = new Object.ObjectClient(grpcChannel_);
            }
            return clientObject_;
        }

        /// <summary>
        /// GRPC客户端
        /// </summary>
        protected Object.ObjectClient? clientObject_;

        /// <summary>
        /// GRPC通道
        /// </summary>
        protected GrpcChannel? grpcChannel_;

        /// <summary>
        /// 直系数据层
        /// </summary>
        private ObjectModel? model_;
    }

}
