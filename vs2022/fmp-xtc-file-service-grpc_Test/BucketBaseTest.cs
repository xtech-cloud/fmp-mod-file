
//*************************************************************************************
//   !!! Generated by the fmp-cli.  DO NOT EDIT!
//*************************************************************************************

using XTC.FMP.MOD.File.LIB.Proto;
using XTC.FMP.MOD.File.App.Service;

public class BucketBaseTest
{

    [Fact]
    public virtual async Task MakeTest()
    {
        var service = new BucketService();
        var request = new BucketMakeRequest();
        var response = await service.Make(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task ListTest()
    {
        var service = new BucketService();
        var request = new BucketListRequest();
        var response = await service.List(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task RemoveTest()
    {
        var service = new BucketService();
        var request = new BucketRemoveRequest();
        var response = await service.Remove(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task GetTest()
    {
        var service = new BucketService();
        var request = new BucketGetRequest();
        var response = await service.Get(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task FindTest()
    {
        var service = new BucketService();
        var request = new BucketFindRequest();
        var response = await service.Find(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task SearchTest()
    {
        var service = new BucketService();
        var request = new BucketSearchRequest();
        var response = await service.Search(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task UpdateTest()
    {
        var service = new BucketService();
        var request = new BucketUpdateRequest();
        var response = await service.Update(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task ResetTokenTest()
    {
        var service = new BucketService();
        var request = new BucketResetTokenRequest();
        var response = await service.ResetToken(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task GenerateManifestTest()
    {
        var service = new BucketService();
        var request = new BucketGenerateManifestRequest();
        var response = await service.GenerateManifest(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

    [Fact]
    public virtual async Task CleanTest()
    {
        var service = new BucketService();
        var request = new BucketCleanRequest();
        var response = await service.Clean(request, TestServerCallContext.Create());
        Assert.Equal(0, response.Status.Code);
    }

}
